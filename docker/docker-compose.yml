version: "2"

services:
  api:
    container_name: api
    restart: always
    build: php
    environment:
      - 'APP_ENV=prod'
      - 'APP_DEBUG=0'
      - 'VIRTUAL_HOST='
      - 'VIRTUAL_PORT=8000'
      - 'LETSENCRYPT_HOST='
      - 'LETSENCRYPT_EMAIL='
      - 'APP_SECRET='
    ports:
      - "8000:8000"
    expose:
      - 8000
    volumes:
      - ../:/var/www/mock_api
      - ./logs/mock_api:/var/www/mock_api/var/log
    links:
      - api-db
    security_opt:
      - label:disable
  api-db:
    container_name: api-db
    image: postgres:10.6-alpine
    restart: always
    ports:
      - '5433:5432'
    volumes:
      - ./docker_volumes/scripts:/docker-entrypoint-initdb.d
      - ./docker_volumes/data:/var/lib/postgresql/data
    security_opt:
      - label:disable
  nginx:
    build: nginx
    links:
      - api
    volumes:
      - ../:/var/www/mock_api/
      - ./logs/nginx/:/var/log/nginx:z
    depends_on:
      - api
      - nginx-gen
    environment:
      - 'VIRTUAL_HOST='
      - 'LETSENCRYPT_HOST='
      - 'LETSENCRYPT_EMAIL='
  nginx-gen:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-gen
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /home/jagdcake/api/docker/conf.d:/etc/nginx/conf.d
      - /home/jagdcake/api/docker/vhost.d:/etc/nginx/vhost.d
      - /home/jagdcake/api/docker/html:/usr/share/nginx/html
      - /home/jagdcake/api/docker/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/tmp/docker.sock:z
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    security_opt:
      - label:disable
  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: unless-stopped
    volumes_from:
      - nginx-gen
    volumes:
      - /home/jagdcake/api/docker/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:z
    environment:
      - 'NGINX_PROXY_CONTAINER=nginx-gen'
    security_opt:
      - label:disable
